<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Market Data (ChemCorp Sales Data Jan15 – Dec15)' inline='true' name='federated.1rp0x5y0mbd1r714is2tv1114tud' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ChemCorp Sales Data Jan15 – Dec15' name='excel-direct.074i9i51wpjngy13suz4w0biveyb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Owner/Documents/My Tableau Repository/Datasources/2021.4/en_US-US/ChemCorp Sales Data Jan15 – Dec15.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.074i9i51wpjngy13suz4w0biveyb' name='Market Data' table='[&apos;Market Data$&apos;]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='Business Type' ordinal='0' />
            <column datatype='integer' name='Total Businesses' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.074i9i51wpjngy13suz4w0biveyb' name='Transaction Data' table='[&apos;Transaction Data$&apos;]' type='table'>
            <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
              <column datatype='string' name='Sale ID' ordinal='0' />
              <column datatype='date' name='Date' ordinal='1' />
              <column datatype='integer' name='Customer ID' ordinal='2' />
              <column datatype='string' name='Product Type' ordinal='3' />
              <column datatype='string' name='Product ID' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='string' name='State' ordinal='6' />
              <column datatype='string' name='Business Type' ordinal='7' />
              <column datatype='real' name='Cost (per unit)' ordinal='8' />
              <column datatype='real' name='Price (per unit)' ordinal='9' />
              <column datatype='real' name='Quantity' ordinal='10' />
              <column datatype='real' name='Revenue (total)' ordinal='11' />
              <column datatype='real' name='Cost (total)' ordinal='12' />
              <column datatype='integer' name='Zip Code' ordinal='13' />
            </columns>
          </relation>
          <relation connection='excel-direct.074i9i51wpjngy13suz4w0biveyb' name='Market Data' table='[&apos;Market Data$&apos;]' type='table'>
            <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
              <column datatype='string' name='Business Type' ordinal='0' />
              <column datatype='integer' name='Total Businesses' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Business Type (Market Data)]' value='[Market Data].[Business Type]' />
          <map key='[Business Type]' value='[Transaction Data].[Business Type]' />
          <map key='[Cost (per unit)]' value='[Transaction Data].[Cost (per unit)]' />
          <map key='[Cost (total)]' value='[Transaction Data].[Cost (total)]' />
          <map key='[Customer ID]' value='[Transaction Data].[Customer ID]' />
          <map key='[Date]' value='[Transaction Data].[Date]' />
          <map key='[Price (per unit)]' value='[Transaction Data].[Price (per unit)]' />
          <map key='[Product ID]' value='[Transaction Data].[Product ID]' />
          <map key='[Product Type]' value='[Transaction Data].[Product Type]' />
          <map key='[Quantity]' value='[Transaction Data].[Quantity]' />
          <map key='[Region]' value='[Transaction Data].[Region]' />
          <map key='[Revenue (total)]' value='[Transaction Data].[Revenue (total)]' />
          <map key='[Sale ID]' value='[Transaction Data].[Sale ID]' />
          <map key='[State]' value='[Transaction Data].[State]' />
          <map key='[Total Businesses]' value='[Market Data].[Total Businesses]' />
          <map key='[Zip Code]' value='[Transaction Data].[Zip Code]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N10001:no:A1:N10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Market Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sale ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sale ID]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Sale ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Business Type]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Business Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost (per unit)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost (per unit)]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Cost (per unit)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price (per unit)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price (per unit)]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Price (per unit)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue (total)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Revenue (total)]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Revenue (total)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost (total)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost (total)]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Cost (total)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zip Code]</local-name>
            <parent-name>[Transaction Data]</parent-name>
            <remote-alias>Zip Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transaction Data_5BD945EFAE9647BB99C707CE05180852]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Business Type (Market Data)]</local-name>
            <parent-name>[Market Data]</parent-name>
            <remote-alias>Business Type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Market Data_AB403F6618904C80A5371EEAA36EE860]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Businesses</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Businesses]</local-name>
            <parent-name>[Market Data]</parent-name>
            <remote-alias>Total Businesses</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Market Data_AB403F6618904C80A5371EEAA36EE860]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Business Type (Market Data)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Business Type]' role='dimension' type='nominal' />
      <column caption='Profit' datatype='real' name='[Calculation_1312517832116174848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Revenue (total)] - [Cost (total)]' />
      </column>
      <column caption='Number of Customers' datatype='integer' name='[Calculation_1385982801184878593]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Customer ID])' />
      </column>
      <column caption='Chemicals Purchased' datatype='integer' name='[Calculation_1385982801220907013]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Product ID])' />
      </column>
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Market Data' datatype='table' name='[__tableau_internal_object_id__].[Market Data_AB403F6618904C80A5371EEAA36EE860]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Transaction Data' datatype='table' name='[__tableau_internal_object_id__].[Transaction Data_5BD945EFAE9647BB99C707CE05180852]' role='measure' type='quantitative' />
      <column-instance column='[Business Type (Market Data)]' derivation='None' name='[none:Business Type (Market Data):nk]' pivot='key' type='nominal' />
      <column-instance column='[Business Type]' derivation='None' name='[none:Business Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='6' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Customer ID:ok]' type='palette'>
            <map to='#499894'>
              <bucket>10009</bucket>
            </map>
            <map to='#499894'>
              <bucket>10029</bucket>
            </map>
            <map to='#499894'>
              <bucket>10049</bucket>
            </map>
            <map to='#499894'>
              <bucket>10069</bucket>
            </map>
            <map to='#499894'>
              <bucket>10089</bucket>
            </map>
            <map to='#499894'>
              <bucket>10109</bucket>
            </map>
            <map to='#499894'>
              <bucket>10129</bucket>
            </map>
            <map to='#499894'>
              <bucket>10149</bucket>
            </map>
            <map to='#499894'>
              <bucket>10169</bucket>
            </map>
            <map to='#499894'>
              <bucket>10189</bucket>
            </map>
            <map to='#499894'>
              <bucket>10209</bucket>
            </map>
            <map to='#499894'>
              <bucket>10229</bucket>
            </map>
            <map to='#499894'>
              <bucket>10249</bucket>
            </map>
            <map to='#499894'>
              <bucket>10269</bucket>
            </map>
            <map to='#499894'>
              <bucket>10289</bucket>
            </map>
            <map to='#499894'>
              <bucket>10309</bucket>
            </map>
            <map to='#499894'>
              <bucket>10329</bucket>
            </map>
            <map to='#499894'>
              <bucket>10349</bucket>
            </map>
            <map to='#499894'>
              <bucket>10369</bucket>
            </map>
            <map to='#499894'>
              <bucket>10389</bucket>
            </map>
            <map to='#499894'>
              <bucket>10409</bucket>
            </map>
            <map to='#499894'>
              <bucket>10429</bucket>
            </map>
            <map to='#499894'>
              <bucket>10449</bucket>
            </map>
            <map to='#499894'>
              <bucket>10469</bucket>
            </map>
            <map to='#499894'>
              <bucket>10489</bucket>
            </map>
            <map to='#499894'>
              <bucket>10509</bucket>
            </map>
            <map to='#499894'>
              <bucket>10529</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10021</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10041</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10061</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10081</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10101</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10121</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10141</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10161</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10181</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10201</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10221</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10241</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10261</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10281</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10301</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10321</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10341</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10361</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10381</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10401</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10421</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10441</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10461</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10481</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10501</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10521</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10541</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10005</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10025</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10045</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10065</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10085</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10105</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10125</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10145</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10165</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10185</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10205</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10225</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10245</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10265</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10285</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10305</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10325</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10345</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10365</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10385</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10405</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10425</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10445</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10465</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10485</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10505</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10525</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10013</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10033</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10053</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10073</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10093</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10113</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10133</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10153</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10173</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10193</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10213</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10233</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10253</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10273</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10293</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10313</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10333</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10353</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10373</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10393</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10413</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10433</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10453</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10473</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10493</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10513</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10533</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10010</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10030</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10050</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10070</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10090</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10110</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10130</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10150</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10170</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10190</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10210</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10230</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10250</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10270</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10290</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10310</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10330</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10350</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10370</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10390</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10410</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10430</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10450</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10470</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10490</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10510</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10530</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10006</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10026</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10046</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10066</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10086</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10106</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10126</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10146</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10166</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10186</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10206</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10226</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10246</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10266</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10286</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10306</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10326</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10346</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10366</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10386</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10406</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10426</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10446</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10466</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10486</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10506</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10526</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10019</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10039</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10059</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10079</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10099</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10119</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10139</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10159</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10179</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10199</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10219</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10239</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10259</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10279</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10299</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10319</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10339</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10359</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10379</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10399</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10419</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10439</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10459</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10479</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10499</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10519</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10539</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10002</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10022</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10042</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10062</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10082</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10102</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10122</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10142</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10162</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10182</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10202</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10222</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10242</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10262</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10282</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10302</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10322</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10342</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10362</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10382</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10402</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10422</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10442</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10462</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10482</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10502</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10522</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10542</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10017</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10037</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10057</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10077</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10097</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10117</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10137</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10157</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10177</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10197</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10217</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10237</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10257</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10277</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10297</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10317</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10337</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10357</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10377</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10397</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10417</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10437</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10457</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10477</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10497</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10517</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10537</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10007</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10027</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10047</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10067</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10087</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10107</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10127</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10147</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10167</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10187</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10207</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10227</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10247</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10267</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10287</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10307</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10327</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10347</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10367</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10387</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10407</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10427</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10447</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10467</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10487</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10507</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10527</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10014</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10034</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10054</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10074</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10094</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10114</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10134</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10154</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10174</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10194</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10214</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10234</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10254</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10274</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10294</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10314</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10334</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10354</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10374</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10394</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10414</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10434</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10454</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10474</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10494</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10514</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10534</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10015</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10035</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10055</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10075</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10095</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10115</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10135</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10155</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10175</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10195</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10215</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10235</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10255</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10275</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10295</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10315</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10335</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10355</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10375</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10395</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10415</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10435</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10455</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10475</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10495</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10515</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10535</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10018</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10038</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10058</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10078</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10098</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10118</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10138</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10158</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10178</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10198</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10218</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10238</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10258</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10278</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10298</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10318</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10338</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10358</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10378</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10398</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10418</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10438</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10458</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10478</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10498</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10518</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10538</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10020</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10040</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10060</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10080</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10100</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10120</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10140</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10160</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10180</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10200</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10220</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10240</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10260</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10280</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10300</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10320</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10340</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10360</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10380</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10400</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10420</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10440</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10460</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10480</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10500</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10520</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10540</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10011</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10031</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10051</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10071</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10091</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10131</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10151</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10171</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10191</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10211</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10231</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10251</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10271</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10291</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10311</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10331</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10351</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10371</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10391</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10411</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10431</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10451</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10471</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10491</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10511</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10531</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10008</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10028</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10048</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10068</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10088</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10108</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10128</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10148</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10168</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10188</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10208</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10228</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10248</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10268</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10288</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10308</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10328</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10348</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10368</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10388</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10408</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10428</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10448</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10468</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10488</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10508</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10528</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10023</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10043</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10063</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10083</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10103</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10123</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10143</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10163</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10183</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10203</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10223</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10243</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10263</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10283</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10303</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10323</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10343</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10363</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10383</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10403</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10423</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10443</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10463</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10483</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10503</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10523</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10543</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10016</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10036</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10056</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10076</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10096</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10116</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10136</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10156</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10176</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10196</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10216</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10236</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10256</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10276</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10296</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10316</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10336</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10356</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10376</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10396</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10416</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10436</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10456</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10476</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10496</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10516</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10536</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10012</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10032</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10052</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10072</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10092</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10112</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10132</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10152</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10172</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10192</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10212</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10232</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10252</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10272</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10292</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10312</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10332</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10352</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10372</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10392</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10412</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10432</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10452</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10472</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10492</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10512</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10532</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10004</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10024</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10044</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10064</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10084</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10104</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10124</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10144</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10164</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10184</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10204</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10224</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10244</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10264</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10284</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10304</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10324</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10344</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10364</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10384</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10404</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10424</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10444</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10464</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10484</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10504</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10524</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10544</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product ID:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chemical I&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chemical A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chemical E&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chemical J&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chemical F&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chemical B&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chemical G&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chemical K&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chemical H&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chemical C&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chemical D&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Business Type (Market Data):nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#5fbb68'>
              <bucket>&quot;Paper and Packaging&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Pharmaceuticals&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Aerospace Defense&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Machinery and Industrial Goods&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Medical Equipment&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Biotechnology&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Business Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Aerospace Defense&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paper and Packaging&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Medical Equipment&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Machinery and Industrial Goods&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pharmaceuticals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Biotechnology&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Sale ID' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Product Type' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Calculation_1385982801220907013' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Business Type' />
        <field-sort-custom-order field='Cost (per unit)' />
        <field-sort-custom-order field='Price (per unit)' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Revenue (total)' />
        <field-sort-custom-order field='Cost (total)' />
        <field-sort-custom-order field='Zip Code' />
        <field-sort-custom-order field='Calculation_1312517832116174848' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Market Data' id='Market Data_AB403F6618904C80A5371EEAA36EE860'>
            <properties context=''>
              <relation connection='excel-direct.074i9i51wpjngy13suz4w0biveyb' name='Market Data' table='[&apos;Market Data$&apos;]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='Business Type' ordinal='0' />
                  <column datatype='integer' name='Total Businesses' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Transaction Data' id='Transaction Data_5BD945EFAE9647BB99C707CE05180852'>
            <properties context=''>
              <relation connection='excel-direct.074i9i51wpjngy13suz4w0biveyb' name='Transaction Data' table='[&apos;Transaction Data$&apos;]' type='table'>
                <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Sale ID' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='integer' name='Customer ID' ordinal='2' />
                  <column datatype='string' name='Product Type' ordinal='3' />
                  <column datatype='string' name='Product ID' ordinal='4' />
                  <column datatype='string' name='Region' ordinal='5' />
                  <column datatype='string' name='State' ordinal='6' />
                  <column datatype='string' name='Business Type' ordinal='7' />
                  <column datatype='real' name='Cost (per unit)' ordinal='8' />
                  <column datatype='real' name='Price (per unit)' ordinal='9' />
                  <column datatype='real' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Revenue (total)' ordinal='11' />
                  <column datatype='real' name='Cost (total)' ordinal='12' />
                  <column datatype='integer' name='Zip Code' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Business Type]' />
              <expression op='[Business Type (Market Data)]' />
            </expression>
            <first-end-point object-id='Transaction Data_5BD945EFAE9647BB99C707CE05180852' />
            <second-end-point object-id='Market Data_AB403F6618904C80A5371EEAA36EE860' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Business Type by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Paper and Packaging Revenue by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Market Data (ChemCorp Sales Data Jan15 – Dec15)' name='federated.1rp0x5y0mbd1r714is2tv1114tud' />
          </datasources>
          <datasource-dependencies datasource='federated.1rp0x5y0mbd1r714is2tv1114tud'>
            <column datatype='string' name='[Business Type (Market Data)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Revenue (total)]' role='measure' type='quantitative' />
            <column-instance column='[Business Type (Market Data)]' derivation='None' name='[none:Business Type (Market Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue (total)]' derivation='Sum' name='[sum:Revenue (total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]'>
            <groupfilter function='member' level='[none:Business Type (Market Data):nk]' member='&quot;Paper and Packaging&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]</rows>
        <cols>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{AF07F632-22B6-4B64-B9D4-8E374602DA62}' />
    </worksheet>
    <worksheet name='Customer Needs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Don&apos;t Divest</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Market Data (ChemCorp Sales Data Jan15 – Dec15)' name='federated.1rp0x5y0mbd1r714is2tv1114tud' />
          </datasources>
          <datasource-dependencies datasource='federated.1rp0x5y0mbd1r714is2tv1114tud'>
            <column caption='Profit' datatype='real' name='[Calculation_1312517832116174848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Revenue (total)] - [Cost (total)]' />
            </column>
            <column caption='Chemicals Purchased' datatype='integer' name='[Calculation_1385982801220907013]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Product ID])' />
            </column>
            <column datatype='real' name='[Cost (total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Revenue (total)]' role='measure' type='quantitative' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1312517832116174848]' derivation='Sum' name='[sum:Calculation_1312517832116174848:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1385982801220907013]' derivation='User' name='[usr:Calculation_1385982801220907013:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]' included-values='in-range'>
            <min>118621.0</min>
            <max>2106573.733690002</max>
          </filter>
          <filter class='quantitative' column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[usr:Calculation_1385982801220907013:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]</column>
            <column>[federated.1rp0x5y0mbd1r714is2tv1114tud].[usr:Calculation_1385982801220907013:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Customer ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]</rows>
        <cols>[federated.1rp0x5y0mbd1r714is2tv1114tud].[usr:Calculation_1385982801220907013:qk]</cols>
      </table>
      <simple-id uuid='{82D742A3-BF7B-44EA-B067-E75D6314B008}' />
    </worksheet>
    <worksheet name='Most Profitable Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Market Data (ChemCorp Sales Data Jan15 – Dec15)' name='federated.1rp0x5y0mbd1r714is2tv1114tud' />
          </datasources>
          <datasource-dependencies datasource='federated.1rp0x5y0mbd1r714is2tv1114tud'>
            <column datatype='string' name='[Business Type]' role='dimension' type='nominal' />
            <column caption='Profit' datatype='real' name='[Calculation_1312517832116174848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Revenue (total)] - [Cost (total)]' />
            </column>
            <column datatype='real' name='[Cost (total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Revenue (total)]' role='measure' type='quantitative' />
            <column-instance column='[Business Type]' derivation='None' name='[none:Business Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1312517832116174848]' derivation='Sum' name='[pcto:sum:Calculation_1312517832116174848:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1312517832116174848]' derivation='Sum' name='[sum:Calculation_1312517832116174848:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Customer ID:ok]' direction='DESC' using='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[pcto:sum:Calculation_1312517832116174848:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.01' value-column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[pcto:sum:Calculation_1312517832116174848:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Customer ID:ok]</rows>
        <cols onLeft='true'>[federated.1rp0x5y0mbd1r714is2tv1114tud].[pcto:sum:Calculation_1312517832116174848:qk]</cols>
        <percentages enabled='true' mode='table' />
      </table>
      <simple-id uuid='{D8600AB3-3E23-49BC-9422-73823562144E}' />
    </worksheet>
    <worksheet name='Products by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 3 Products by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Market Data (ChemCorp Sales Data Jan15 – Dec15)' name='federated.1rp0x5y0mbd1r714is2tv1114tud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rp0x5y0mbd1r714is2tv1114tud'>
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Revenue (total)]' role='measure' type='quantitative' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue (total)]' derivation='Sum' name='[sum:Revenue (total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Product ID:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Chemical H&quot;' />
              <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Chemical I&quot;' />
              <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Chemical K&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Product ID:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Product ID:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]</rows>
        <cols>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{D8A86A45-0F91-44BE-969E-89A654E5AAD9}' />
    </worksheet>
    <worksheet name='Profitability vs. Number of Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Market Data (ChemCorp Sales Data Jan15 – Dec15)' name='federated.1rp0x5y0mbd1r714is2tv1114tud' />
          </datasources>
          <datasource-dependencies datasource='federated.1rp0x5y0mbd1r714is2tv1114tud'>
            <column datatype='string' name='[Business Type]' role='dimension' type='nominal' />
            <column caption='Profit' datatype='real' name='[Calculation_1312517832116174848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Revenue (total)] - [Cost (total)]' />
            </column>
            <column caption='Number of Customers' datatype='integer' name='[Calculation_1385982801184878593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Customer ID])' />
            </column>
            <column datatype='real' name='[Cost (total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Revenue (total)]' role='measure' type='quantitative' />
            <column-instance column='[Business Type]' derivation='None' name='[none:Business Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1312517832116174848]' derivation='Sum' name='[sum:Calculation_1312517832116174848:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1385982801184878593]' derivation='User' name='[usr:Calculation_1385982801184878593:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]</rows>
        <cols>[federated.1rp0x5y0mbd1r714is2tv1114tud].[usr:Calculation_1385982801184878593:qk]</cols>
      </table>
      <simple-id uuid='{E1431A40-3A0B-420B-821B-5A5AF53BD156}' />
    </worksheet>
    <worksheet name='Revenue and Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Revenue and Profit by Business Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Market Data (ChemCorp Sales Data Jan15 – Dec15)' name='federated.1rp0x5y0mbd1r714is2tv1114tud' />
          </datasources>
          <datasource-dependencies datasource='federated.1rp0x5y0mbd1r714is2tv1114tud'>
            <column datatype='string' name='[Business Type]' role='dimension' type='nominal' />
            <column caption='Profit' datatype='real' name='[Calculation_1312517832116174848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Revenue (total)] - [Cost (total)]' />
            </column>
            <column datatype='real' name='[Cost (total)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Revenue (total)]' role='measure' type='quantitative' />
            <column-instance column='[Business Type]' derivation='None' name='[none:Business Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1312517832116174848]' derivation='Sum' name='[sum:Calculation_1312517832116174848:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue (total)]' derivation='Sum' name='[sum:Revenue (total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]' field-type='quantitative' major-origin='0.0' major-spacing='5000000.0' max='22496912.022245884' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]' field-type='quantitative' major-origin='0.0' major-spacing='5000000.0' max='23000000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]' value='c&quot;$&quot;#,##0,,M;(&quot;$&quot;#,##0,,M)' />
            <format attr='text-format' field='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]' value='c&quot;$&quot;#,##0,,M;(&quot;$&quot;#,##0,,M)' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]</rows>
        <cols>([federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk] + [federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk])</cols>
      </table>
      <simple-id uuid='{F349FD45-49D1-47E1-8BC3-ECE8F838944E}' />
    </worksheet>
    <worksheet name='Seasonality'>
      <table>
        <view>
          <datasources>
            <datasource caption='Market Data (ChemCorp Sales Data Jan15 – Dec15)' name='federated.1rp0x5y0mbd1r714is2tv1114tud' />
          </datasources>
          <datasource-dependencies datasource='federated.1rp0x5y0mbd1r714is2tv1114tud'>
            <column datatype='string' name='[Business Type]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Revenue (total)]' role='measure' type='quantitative' />
            <column-instance column='[Business Type]' derivation='None' name='[none:Business Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue (total)]' derivation='Sum' name='[sum:Revenue (total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]</rows>
        <cols>([federated.1rp0x5y0mbd1r714is2tv1114tud].[yr:Date:ok] * [federated.1rp0x5y0mbd1r714is2tv1114tud].[tmn:Date:qk])</cols>
      </table>
      <simple-id uuid='{04F95234-7D66-4ED0-B229-715100D2B31D}' />
    </worksheet>
    <worksheet name='Top-Selling Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='Market Data (ChemCorp Sales Data Jan15 – Dec15)' name='federated.1rp0x5y0mbd1r714is2tv1114tud' />
          </datasources>
          <datasource-dependencies datasource='federated.1rp0x5y0mbd1r714is2tv1114tud'>
            <column datatype='string' name='[Business Type (Market Data)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Business Type (Market Data)]' derivation='None' name='[none:Business Type (Market Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]' direction='DESC' using='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Quantity:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Product ID:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Product ID:nk]</rows>
        <cols>[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Quantity:qk]</cols>
        <percentages enabled='false' mode='row' />
      </table>
      <simple-id uuid='{CD559C3F-A924-45DC-94AE-2D668977D7B4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Action Plan</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='945' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='text-align' value='left' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='7' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='5807' id='8' type-v2='title' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92335' id='1' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='6736'>
              <zone fixed-size='141' h='16376' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99034' x='483' y='6736' />
              <zone h='75959' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99034' x='483' y='23112'>
                <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Chemicals H, K and I are our three best-selling chemicals and almost all of the demand for those products comes from our Paper and Packaging division. ' captured-sheet='Top-Selling Products' id='1' />
                    <story-point caption='Paper and Packaging generates the most revenue and the most profit.' captured-sheet='Revenue and Profit' id='2' />
                    <story-point caption='We need to focus on our core customers. Our top five customers make up about 20 percent of our profit, and 10 of our top 11 customers are Paper and Packaging customers.' captured-sheet='Most Profitable Customers' id='3' />
                    <story-point caption='Even though none of our other five divisions come close to the profitability of Paper and Packaging, those other divisions have a comparable customer volume. We can withstand churn in those divisions more so than in Paper and Packaging.' captured-sheet='Profitability vs. Number of Customers' id='4' />
                    <story-point caption='Product divestment is not recommended. As part of focusing individual attention on our core customers, we should continue producing all 11 of our chemical products. Our top three customers need all of them. This interactive chart shows that as profit increases, so too does number of chemicals purchased.' captured-sheet='Customer Needs' id='7'>
                      <capturedDeltas>
                        <worksheet name='Customer Needs'>
                          <filter class='quantitative' column='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]' included-values='in-range'>
                            <min>95323.0</min>
                          </filter>
                          <selection-collection>
                            <node-selection select-tuples='false'>
                              <oriented-node-reference orientation='vertical'>
                                <node-reference>
                                  <axis>[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]</axis>
                                </node-reference>
                                <page-reference />
                              </oriented-node-reference>
                            </node-selection>
                          </selection-collection>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Just as there should be no divestment of any individual chemicals, it&apos;s difficult to identify any business type for divestiture. We&apos;ve seen that Paper and Packaging is far and away our biggest revenue and profit driver, and the rest of the divisions al seem to fall into the same category. None of them stand out as any weaker than the others. Furthermore, the revenue is fairly flat over the course of the year for all five categories, so none of them show signs of emergence. We need to focus our resources on Paper and Packaging.' captured-sheet='Seasonality' id='8' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{CCF06CB5-A1C6-4676-89C8-AC51B58625B0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top-Selling Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Product ID:nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Product Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D424EA9A-6D2E-4FA9-A5A6-C0E1E0B46221}' />
    </window>
    <window class='worksheet' name='Revenue and Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Revenue (total):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Region:nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Zip Code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABC4AFE9-2A13-4E8A-9C23-D91403EA9556}' />
    </window>
    <window class='worksheet' name='Products by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Product ID:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Product ID:nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Region:nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CFC1198-4C3D-45D3-95E7-6F975BC3B7DB}' />
    </window>
    <window class='worksheet' name='Business Type by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type (Market Data):nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{356EF75D-C4DD-4E75-88F6-5B36050AC676}' />
    </window>
    <window class='worksheet' name='Most Profitable Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Customer ID:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7611E53A-6FCC-4BD2-B58C-70AA4A6AFED2}' />
    </window>
    <window class='worksheet' name='Profitability vs. Number of Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Customer ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{297064D2-400A-43CA-847E-993FA06BD426}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{2925D5B9-DC89-4EC2-86FF-7BCD56FA7A4E}' />
    </window>
    <window class='worksheet' name='Customer Needs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1rp0x5y0mbd1r714is2tv1114tud].[sum:Calculation_1312517832116174848:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Customer ID:ok]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02F17203-66C6-4B1C-9590-7A50AD5915E7}' />
    </window>
    <window class='worksheet' name='Seasonality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[none:Business Type:nk]</field>
            <field>[federated.1rp0x5y0mbd1r714is2tv1114tud].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{962FBF8A-FA66-40FE-B522-0DC919E45473}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Business Type by Region' width='192'>
      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
      IcbP/jNRIWwkARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjjbQ
      LGZ6t8Vnv/0/Hn70KVuPf4M7nCQRUDkqnpOaXaSY20MLRogEvQRcFlZgWqZJFRNtoABo3gBz
      6SSWZREIBKnUaihmgAcP1tl88oSpzDuYrVPq1RKFnsYPHy7JNKlDItOkjsZAAei1mxyf5LEC
      CTSPD7PWxqfB119v4Y+lqeR3UL0+wsEosZBJodwgHXveUC/TpL4emSZ1NAYbATw+Pvjwx6gu
      DZcSZWZ+Ebfmotfr4fF40NPTKKqGqjx/wbwJdwUQzjZQAFSXC7/ff2m51/u8+dft9lxY/iY0
      RQtns3+sFMJGEgDhaBIA4WgSAOFoEgDhaBIA4WgSAOFoEgDhaBIA4WgSAOFoEgDhaBIA4WgS
      AOFoEgDhaAMFwLIsioU8hgnlUp7DfAmj1yGb3aZvmOQP9ylV6jQaDUy9Q63RHlXdQgzFQP0A
      Rq9NLrdPOJbg5LSOW9HZrpySmU2znX2G4gph1g7x+j3o7TaLt9dfthLa3VJ4nUmt6ypvUq3w
      ZtQ7cE9wMhoBTDS3B4+i0uwbBAJ+LL2LJzCNabZpN2u0uipul4ppTnBPsGlgGDerw+4/poV1
      81onoBPPMG7+3NppoAB0mzVK5RqGt4zP1aOlayzNRNnYyLK09i7Fg220UJx0PErE76F0XiOd
      iAAT2hOsSk/wqLyVPcHeYIRHP/zoDz9lXi5/8CABwNTdexfWTwdfrzghRs3+Q4UQNpIACEeT
      AAhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHe+WO
      hY3Hn6P6o6TCHg5OTpldXKF4sIMrGCUS9BDUoO+JyTSpYqK9YgAsXKqLdqtFydR58OAum0+e
      EEyuYrZLVM4LHPfcfPhwTqZJHRKZJnU0Xi0AlslUfJpOvoBL0cjljnCH4zTKJ6BYBINRwr4e
      5UaHeMgHTGhLpEyTOjJvZUvkS4qLcCiA/51bRII+zitVYrEYrXoVlzeIplpomkav1x9yuUIM
      1ytHNBieevnvRDwOQCgSvbDOi+lThZhU9o+VQthIAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxN
      AiAcTQIgHE0CIBxNAiAcbYgBsKiWSzTbPbrdLpZp0O70hrd5IUZgaNerGv0WhydlLKtIIOBD
      6XdILt4e1uaFGImhjQBmv0UgMo3f46HdrFBq6IS8k389uHC2oQVA88Vone+hqxrxRIa7y2ny
      57VhbV6IkRjaIVpRNe49+ODCstCwNi7EiCjWiJtdX/QEq99q09NNnabeGuWuv1dAC+BWLx4D
      rqoVoNlvolv29TGrikrYffGQ8uJP9+12za7RpWN0x1bbVcLuEKpy8Xm87rmt9epY2NNzPfIA
      wPUPfBK9SbVeF4BJNYnP7ViqucmDPt7bpqWblE5Ll37Xaj0fKcrl8h+X1c7Z2Nig2b1854EX
      63/baenytl+l1k6jysbGBqVK49LvjH6XTt+4UKtl9tl8ukG+VL60vt5t0btiYLlJrYqivNaL
      v1Y64fGTDQpn1Uu/q9frtKrn7B7mqdfrr7yPb7rpiz+bzWLoHc7L1++3cHzA06dPqbUuj3Sl
      0um1/69SLvPNe2ZMzMc0XV0nt7uHpffoNCucVdukZ6Ypn9conByycvsep4fbeEJx7t+7w17u
      hDvr6/SaNTayh8TTaQp7+3inohQPd1m9+z614gGJ2SXKhQLhZIZaucR0MvnatRaLBXzBKaYC
      GhtfPUYLTBHwKIS8LoqFPMdtPyl/j8NcjuVbdykfbTOzcpuQZrK1+RTVG8ZsV2j3wWtWqbrn
      yAR1TJcfek26eDH77aHU+l1alQoLt97lJLtFp5Kng4+QptM2PfjcCie7WWIrd6hWKxRPcrhD
      SRZnUyOtCaBeOiYfDNBp9ymeHOANhnFrHs7PisxlUgRjKWqNBtFoDKVb54vtZ4TDUdq1Moon
      gIs+bsVk/7DAzFyak+MiU4kU/UaJ0/M2P/qTD1/ua3LGI9VDyG3R6OjUO31WUz4Oig3mF1dI
      z8ywMJsinpoh6vdi8vw+OZZlcnq8T6Nn0u/3iMQzeDWFVGaWuXQSzR8m5NJp9XWOjgtDK3V2
      YYVY0MWXX3yBP5bB7DZpNOo0GzWCUzGWlhbwBSMsL2botHooioJhmnRbVY4KZ/R1Hc0bZCYa
      IBCNs7i4SLdvsZhJUKk3OT46Hss7YtPUyW5uMbsww3mlxfHREY12n9WlORr1OvFkhsX5DPVG
      Bd30Mp8ZbSBfiKZmqRSPMRqnHJw20Q1oVAq49B47hSoeTUVRXPh8Piy9T2ZhBb3fJZheQTGe
      f/laLlfoVvPky10WVtYwWg3QfGSSsQv7mpgRIB6PE4kE6JEnGtQ4qrS5u5zE73WxkJ4md1wk
      Ho+jWs9Tu7Y0z7PNZ8zNr9A8PCQUDKP6AcXA0rscF85Ip1K4PRoBX5VILIHXPZy8d5o18qdl
      1u6+R6V4RDieQjOanNfaLGUyHOSOyaSTeH1uXKabZGyN7a0s4USa5dkUWjBI2O/BrVqE3G4O
      jg5Ip1IoLjfhYIBwNEk0EhxKrd9lKjVHIhzHqxpEwgEiiSSJkJu93AmpdBoVcAHp1Bz9dp2T
      4jlzYwhBPJEkGY3QUXy4fEf4Q0E8AQV/LMX5aRlVgalwgHw+TzqdIez34k3GOdzfptG3eHdt
      EavfpZeaJ5aM4ve6UaeT1CqndBQP33zTOJaTYCFGzbJMcnu7xNLzhAM3vx2PBEA42uScAwhh
      AwmAcLT/ByFSOoT9VK52AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Customer Needs' width='192'>
      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
      CZTLT//zRxCO8fCdX3HUcugfGGRz+RGBSILc9gb5g2PyuTzOSZ6CFaG0vUIgFOHx4iLJvgF+
      9rM3SIbhqO6QjEV4/ftvsLm+THowg92oUak2ODg5RNltnmzt89av3sBxg6TiYd57sEhmaIjH
      jx4QTqbZXV/GDsapH+f4l3/+N67/1afpbDOUP5BF8eKjlEPdCXL7+lVyKw8YSSi+/73XsYJJ
      hrN7NOoWUVMxmInRNsJkl9cZv/4qmfoJh6V9fn7w9JnH/fv3mb35MpMjaerVMpMTs7zz1tuM
      RaHUDpKcnuNo/bd841vfYvHBu5QLG6zhcpxf4yc/O6TebBCkza9+v8XI0DZOq8X0+JCnL1VO
      gcRHBUzGBqL8+jfvEoqlSCQSDI9Pk4oGuXH9Kun0AOlMhlQqRSQaY2x6jvz6ItntbZQZJ5WI
      kkgkmJmZZn19HYDbn7rL17/yeeKmIndYJZFIcevGNSaH+1lc3SCdGSSRSHKYzxHqS5NIDjCV
      DrN/YpFJRrh+4yZR0+Go2sLL/QblNqjQmhwBhNb+D8wH+HYd2f+gAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Most Profitable Customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Products by Region' width='192'>
      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
      3bs3eP7sGYHYLGbniGKhwLbu5cF3MtIU3zfSFD8IrxYA22Lq2g0OtjcxFA+1Wh3FF6LbbmDq
      OsFwHH+7RaNrEvWfNMNLU/zrkqb4QXjFClWMTo1YZpJcOsbW9j5Li0scF/bwhufxeWyCAT+N
      Zgf84f5WLEQfvVoAFIV0durL/87PzwEwnpt+6WrRiDz5xWhzfl8phIMkAMLVJADC1SQAwtUk
      AMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtX6GACbarlEs92j2+1iWybtTq9/
      mxdiAPrWsWDqLXbzZWy7QCgUQNE7pGdv9GvzQgxE3/YAlt4iFBsn6PPRblYoNQwi/tHvCBLu
      1rcAeAJJWsebGKqH1FiO29eyHBzX+rV5IQaiby/Riurh7r37L10W6dfGhRgQxR7wdAdfzArx
      9UZtW9exmq1BDv2t1HAIxfvyWsZn1QpgNRrYhjms0k5RNBU1+vI6zF88dF9v2Lc7XaxOZ2i1
      nUWLReFr9+N5961ZrYJDk24MPABw/g0fRVep1vMCMKpG8b4dSjUXudH7m+u0DItSsXTqd63W
      yZ6iXC5/dVntmOXlZZrd03PPfHH9ryuWTm/7VWrtNKosLy9TqjRO/c7Uu3R086VabUtn5eky
      B6Xyqesb3Ra9M3YsF6lVUZTXevLXSnkePVnm8Kh66nf1ep1W9ZiN3QPq9forj/H7LvrkX1tb
      wzQ6HJfPH/dwf5unT59Sa3VP/a5UKp77d5Vymd+fNWlk3qbpGgY7G5vYRo9Os8JRtU12Ypzy
      cY3D/C7zN+5S3F3HF0nx1t1bbO7kuXXnDr1mjeW1XVLZLIebW/jjCQq7GyzcfodaYZuxyTnK
      h4dE0zlq5RLj6fRr11ooHBIIx4mHPCw/foQnFCfkU4j4NQqHB+y3g2SCPXZ3dri2dJvy3joT
      8zeIeCxWV56i+qNY7QptHfxWlap3ilzYwNKC0GvSxY+lt/tS6zdpVSrMLN0kv7ZKp3JAhwAR
      j0Hb8hHwKuQ31kjO36JarVDI7+CNpJmdzAy0JoB6aZ+DcIhOW6eQ38YfjuL1+Dg+KjCVyxBO
      Zqg1GiQSSZRunU/XnxONJmjXyii+EBo6XsVia/eQiaks+f0C8bEMeqNE8bjNB99778uxRmd/
      pPqIeG0aHYN6R2chE2C70GB6dp7sxAQzkxlSmQkSQT8WYGNj2xbF/S0aPQtd7xFL5fB7FDK5
      SaayaTzBKBHNoKUb7O0f9q3UyZl5kmGNh59+SjCZw+o2aTTqNBs1wvEkc3MzBMIxrs3m6LR6
      KIqCaVl0W1X2Do/QDQOPP8xEIkQokWJ2dpaubjObG6NSb7K/tz+UQ2LLMlhbWWVyZoLjSov9
      vT0abZ2FuSka9TqpdI7Z6Rz1RgXD8jOdG2wgv5DITFIp7GM2imwXmxgmNCqHaEaPF4dVfB4V
      RdEIBALYhk5uZh5D7xLOzqOYJx++lssVutUDDspdZuYXMVsN8ATIpZMvjTUye4BUKkUsFqLH
      AYmwh71Km9vX0gT9GjPZcXb2C6RSKVT7JLWLc9M8X3nO1PQ8zd1dIuEoahBQTGyjy/7hEdlM
      Bq/PQyhQJZYcw+/tT947zRoHxTKLt9+mUtgjmsrgMZsc19rM5XJs7+yTy6bxB7xolpd0cpH1
      1TWiY1muTWbwhMNEgz68qk3E62V7b5tsJoOieYmGQ0QTaRKxwc+pFM9MMRZN4VdNYtEQsbE0
      YxEvmzt5MtksKqAB2cwUertOvnDM1BBCkBpLk07E6CgBtMAewUgYX0ghmMxwXCyjKhCPhjg4
      OCCbzREN+vGnU+xurdPQbW4uzmLrXXqZaZLpBEG/F3U8Ta1SpKP4+P2DxqGcBAsxaLZtsbO5
      QTI7TTTkv/DfSQCEq43OOYAQDpAACFf7f48tTJVcGpEkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profitability vs. Number of Customers' width='192'>
      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
      ZPyqJLpBP6UdOjGb3b5DlRnvi+LYdtt2g3pUiX9wcYxby7u8cHbgc3/fh3Oj7HqZG7OLDA6P
      IksyHquMHYjjiBtlH+g4blL9+uuv881vfpMrV64wOjrK+Pg4mqZh2zbXrl1jaGho/3O8Ho8H
      XdexLGv/c7lvvPEGZ86c4dy5c+i6jqIoKIqCZVmk02lisRiO46CqKvV6HVmWURQF27aRJAlJ
      kjAMg3K5TLFYJJlMoijKkczlv/ybC02P0dyNsj0BXv7Kl5vZVHhEhoeHmZmZoVqtsr29zZtv
      vsnJkyfx+XyUSiVKpRJbW1tks1kGBgZ44403eOWVV5AkCcdxqNVqKIrC5cuXSaVS9Pb2cunS
      Jf7whz8gSRK5XA7Hcejq6qJQKFAoFEgkEszMzOA4DpOTkxiGQSQSIZ1OMzg4+MB6M5kM8/Pz
      nDt3DsdxCAYPb5XxTCZDPB7/xL9Vq1VAXAV6YmmaxurqKqOjo2SzWaanp5mamuLWrVt4PB93
      7dq2TSgUYmlpiRdeeIFsNkss9vGnpuLxONFolI2NDTRNw+Px7AfK7/fj8Xj2PzB/8eJFVldX
      0XWd/v5+zp49S7lcpru7m1qthq7rn1vv7Owsp0+f5t1336VcLnP69GmCwSBbW1uMj4+TSqX2
      P0yvqirT09PcuHGDiYkJ0uk0fr+fcrlMR0cHwWAQVVW5fv06hmEwPT0NwM2bN0kmkywvL5NM
      JnEcRzTDPcjj3AxXr9exLAtN0zBNk3K5jN/vxzAMbNvG5/OhaRqZTIZQKES5XCYQCCDLMpqm
      kUql0DQNv9/P1atXefrppzFNk3A4jCRJXL16lXPnzu2v3nD/3Pr+qdT9f5ckiWw2SzQafeAp
      0LvvvkulUmFkZIRisbi/IsWNGzcYGRnh/PnzzM3NIcsyJ06c4M6dOxQKBfL5PMlkkgsXLvCD
      H/yA/v5+AoEAgUAAj8dDb28vc3NzqKrKiy++yI0bN7h58yajo6PEYjERgAd5nAPQbjV83lze
      X6cIPl5ipV6vs7OzQyqVYmJigunpaebn55Flmf7+fm7fvk06nd5f8qSvr4+lpSV6e3spFots
      b2/zxS9+kfn5ebq6ugiFQqysrOyHfmRkhGg0KgLwICIAhzdGu86leCNMcDURAMHVRAAEVxMB
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue and Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Seasonality' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top-Selling Products' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
